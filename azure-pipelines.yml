trigger: 
 branches:
   include:
     - feature/*
     - main
   
pool: parash_pool


steps:
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'

- task: TerraformTask@5
  displayName: terraform init
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: $(System.DefaultWorkingDirectory)
    backendServiceArm: 'samar_serviceconnection'
    backendAzureRmResourceGroupName: 'sagar'
    backendAzureRmStorageAccountName: '420420'
    backendAzureRmContainerName: 'gautam'
    backendAzureRmKey: 'terraform.tfstate'

- task: TerraformTask@5
  displayName: terraform validate
  inputs:
    provider: 'azurerm'
    command: 'validate'

- task: TerraformTask@5
  displayName: terraform plan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'samar_serviceconnection'

- task: TerraformTask@5
  displayName: terraform apply
  condition: and(succeeded(),eq(variables['Build.SourceBranch'],'refs/heads/main'))
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'samar_serviceconnection'